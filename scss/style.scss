// -- Clearfix -- //
// @extend .clearfix
.clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}


// -- Equal Spaced Columns -- //
// Number of Columns - First Column
// Remaining Number of Columns * Margin Spacing
// Container Width - Total Margin Spacing
// Remaining Width / Total Number of Columns

// -- Clearfix -- //
// @extend .clearfix
.clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}



// -- Equal Spaced Columns -- //
// Number of Columns - First Column
// Remaining Number of Columns * Margin Spacing
// Container Width - Total Margin Spacing
// Remaining Width / Total Number of Columns

@mixin equalSpaced( $num_of_cols, $spacing, $container_width  ){
 
  width: ( $container_width - ( $spacing * ($num_of_cols - 1) ) ) / $num_of_cols;
  margin-left: $spacing;
  margin-top: $spacing;
  float: left;
  
  // Remove Spacing from First Child
  &:first-child{
    margin-left: 0;
  }
  
  
  // We can remove These two things to simply things
  // ===============================================
  // When there's more than one row of columns
  
  // Remove margin-left of the first element in the row.
  &:nth-child( #{$num_of_cols}n + 1){
    margin-left: 0;
  }
  
  // Top Row Remove Margin Top
  @for $i from 1 through $num_of_cols {
      &:nth-child(#{$i}) {
          margin-top: 0;
      }
  }

  
}






.container{
  max-width: 800px;
  background-color: #abc;
  margin: 5% auto;
}

.clearall{
  position: fixed;
  top: 10px;
  padding: 5px;
  right: 10px;
  z-index: 100;
}

.col-container{
  @extend .clearfix;
}

// Col 2 Usage
.col-2{
  background: #333;
  min-height: 100px;
  float: left;
  // equalSpaced( $num_of_cols, $spacing, $width  )
  @include equalSpaced(2, 5%, 100%);
}


// Col 2 Usage
.col-3{
  background: #333;
  min-height: 100px;
  float: left;
  // equalSpaced( $num_of_cols, $spacing, $width  )
  @include equalSpaced(3, 2%, 100%);
}

